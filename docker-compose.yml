version: '3.6'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    restart: always
    container_name: microservice-zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: microservice-kafka
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  kafka-manager:
    image: hlebalbau/kafka-manager:stable
    container_name: microservice-kafka-manager
    hostname: kafka-manager 
    ports:
      - 9000:9000
    environment:
      ZK_HOSTS: zookeeper:2181
      APPLICATION_SECRET: "random-secret"
    depends_on:
      - kafka
    command: -Dpidfile.path=/dev/null

  product-crdb:
    container_name: product-crdb
    image: cockroachdb/cockroach:latest
    volumes:
        - ./data/product-crdb:/cockroach/cockroach-data
    command: start-single-node --insecure
    ports:
        - "26257:26257"
        - "8082:8080"
    networks:
        network_cockroachdb:
            aliases:
                - product-crdb
  
  user-crdb:
    container_name: user-crdb
    image: cockroachdb/cockroach:latest
    volumes:
        - ./data/user-crdb:/cockroach/cockroach-data
    command: start-single-node --insecure
    ports:
        - "26258:26257"
        - "8083:8080"
    networks:
        network_cockroachdb:
            aliases:
                - user-crdb

  user-backend: 
    container_name: user-backend
    build:
      context: ./src/ProductMicroservice
      dockerfile: dockerfile
    ports:
      - 5551:8000
    volumes:
      - .:/backend/user
    depends_on:
      - user-crdb
    command: "python run.py"
    environment:
      DATABASE_URL: "postgresql://root@user-crdb:26258/defaultdb?sslmode=disable"

networks:
    network_cockroachdb:
        driver: bridge